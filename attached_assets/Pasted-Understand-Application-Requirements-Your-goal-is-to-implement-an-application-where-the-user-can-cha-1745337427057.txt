Understand Application Requirements
Your goal is to implement an application where the user can chat with an AI model. Beyond

this, the user should be able to give some feedback at each stage of the conversation.


This feedback is multi-fold.

The user should be able to like/dislike the AI model's answer using the thumbs
up/thumbs down buttons. These buttons are hidden and float when the mouse

hovers over the AI model's response.

The user should be able to give a rating out of 5 at the end of the conversation. You
can get creative here and use a likert scale, or 5 stars, etc.

The user should be able to give subjective feedback at the end of the conversation.


 This is how your application must look upon the initial render, try to create your project’s UI as closely as possible, and also make sure it is responsive and supports multiple device displays.

Chat with Bot should look like this

On clicking Past Conversions, the Conversation History screen should be rendered.

Component Overview
The bot AI page displays the following elements:

The user should be able to have multiple conversations.
Once the user is done having that conversation, the chat gets saved. This chat can be revisited from a panel on the side/top bar.
While viewing a past conversation, the user should also be able to see the feedback provided.
There should be another view where the user can see all feedback points across conversations and filter them based on rating.

NOTE:
Sample Data:  You need to use the sample data present in the stubs, and add more key, value pairs if needed. The data present inside the above json file must be there for evaluation purposes.
Chat Input Placeholder: Make Sure the Chat Input has a Placeholder = ‘Message Bot AI…’
Ask Button: Make sure the ask button has type = ‘submit’ 
Display Soul AI: Use a <span> tag to represent Soul AI
AI’s Response: Make the you use the <p> tag to show the AI response.
Default Message: If the question does not exist, the AI’s response will be "Sorry, Did not understand your query!"  
Save Button: The save button should have type = ‘button’
Saved Messages: Make sure you use the ‘/history’ route to show the saved messages.

